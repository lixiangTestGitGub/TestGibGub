<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--配置springmvc前端控制器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--contextConfigLocation配置mvc加载配置文件（配置处理器适配器等等）
         如果不配置contextConfigLocation，默认加载的是web-inf/servlet名称servlet.xml
         (srpingmvc-servlet.xml)
         load-on-startup表示servlet随服务启动-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>


    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
            <!--第一种*.action访问以.action结尾由DispatcherServlet进行解析
        第二种/，所有访问地址都由DispatcherServlet进行解析，对于静态的解析需要配置不让
        DispatcherServlet解析 此种方式可以实现RESTful风格的url
        第三种：/* 这样配置不对，使用这种配置，最终要转发一个jsp页面时
        任然会由DispatcherServlet解析jsp地址，不能由jsp页面找到handler，会报错-->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>
</web-app>